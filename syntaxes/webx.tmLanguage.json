{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "WebX",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#route-handler-only"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#types"
        },
        {
            "include": "#variables"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#separators"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.webx",
                    "match": "//.*$"
                },
                {
                    "name": "comment.block.webx",
                    "begin": "/\\*",
                    "end": "\\*/"
                }
            ]
        },
        "handler-call": {
            "name": "meta.route.handler.webx",
            "match": "((\\w+\\(((\\s*(\\w+)\\s*)(\\,(\\s*(\\w+)\\s*))*)?\\))(\\s*\\:\\s*(\\w+))?)",
            "captures": {
                "1": {
                    "name": "entity.name.function.webx"
                },
                "3": {
                    "name": "meta.route.handler-params.webx",
                    "patterns": [
                        {
                            "include": "#parameters"
                        },
                        {
                            "include": "#separators"
                        }
                    ]
                },
                "9": {
                    "name": "meta.route.handler-output.webx",
                    "patterns": [
                        {
                            "include": "#parameters"
                        },
                        {
                            "include": "#separators"
                        }
                    ]
                }
            }
        },
        "param-type-pairs": {
            "name": "meta.route.handler-params.webx",
            "match": "((\\s*(\\w+)\\s*)(\\:)(\\s*(\\w+)\\s*))",
            "captures": {
                "2": {
                    "name": "variable.parameter.webx",
                    "patterns": [
                        {
                            "include": "#parameters"
                        }
                    ]
                },
                "3": {
                    "name": "keyword.operator.webx",
                    "patterns": [
                        {
                            "include": "#separators"
                        }
                    ]
                },
                "5": {
                    "name": "entity.name.type.webx",
                    "patterns": [
                        {
                            "include": "#types"
                        }
                    ]
                }
            }
        },
        "request-body-format": {
            "name": "meta.route.body-format.webx",
            "match": "(\\w+\\((((\\s*(\\w+)\\s*)(\\:)(\\s*(\\w+)\\s*))(\\s*\\,((\\s*(\\w+)\\s*)(\\:)(\\s*(\\w+)\\s*)))*)?\\))",
            "captures": {
                "1": {
                    "name": "entity.name.function.webx"
                },
                "2": {
                    "name": "meta.route.handler-params.webx",
                    "patterns": [
                        {
                            "include": "#param-type-pairs"
                        }
                    ]
                }
            }
        },
        "route-path-params": {
            "name": "keyword.other.webx",
            "match": "\\(((\\s*(\\w+)\\s*)(\\:)(\\s*(\\w+)\\s*))\\)",
            "captures": {
                "2": {
                    "name": "variable.parameter.webx",
                    "patterns": [
                        {
                            "include": "#parameters"
                        }
                    ]
                },
                "3": {
                    "name": "keyword.operator.webx",
                    "patterns": [
                        {
                            "include": "#separators"
                        }
                    ]
                },
                "5": {
                    "name": "entity.name.type.webx",
                    "patterns": [
                        {
                            "include": "#types"
                        }
                    ]
                }
            }
        },
        "route-path-url": {
            "name": "string.interpolated.webx",
            "match": "((\\w+)?\\/?(\\w+|\\/)(\\/\\w+)*\\/?)"
        },
        "route-paths": {
            "name": "string.interpolated.webx",
            "patterns": [
                {
                    "include": "#route-path-params"
                },
                {
                    "include": "#route-path-url"
                }
            ]
        },
        "routes": {
            "name": "entity.name.function.webx",
            "begin": "(\\b(get|post|put|delete|patch|options|head|GET|POST|PUT|DELETE|PATCH|OPTIONS|HEAD)\\b)",
            "end": "(?=(\\-\\>|\\{|\\<))",
            "patterns": [
                {
                    "include": "#request-body-format"
                },
                {
                    "include": "#route-paths"
                }
            ]
        },
        "route-handler-only": {
            "name": "meta.route-handler.webx",
            "match": "(\\b(get|post|put|delete|patch|options|head|GET|POST|PUT|DELETE|PATCH|OPTIONS|HEAD)\\b)\\s+(([\\w+\\/]|(\\(((\\s*(\\w+)\\s*)(\\:)(\\s*(\\w+)\\s*))\\)))+)\\s+(\\w+\\((((\\s*(\\w+)\\s*)(\\:)(\\s*(\\w+)\\s*))(\\s*\\,((\\s*(\\w+)\\s*)(\\:)(\\s*(\\w+)\\s*)))*)?\\))?\\s*(\\-\\>)\\s*(((\\w+\\(((\\s*(\\w+)\\s*)(\\,(\\s*(\\w+)\\s*))*)?\\))(\\s*\\:\\s*(\\w+))?)(\\s*\\,\\s*((\\w+\\(((\\s*(\\w+)\\s*)(\\,(\\s*(\\w+)\\s*))*)?\\))(\\s*\\:\\s*(\\w+))?))*)",
            "captures": {
                "1": {
                    "name": "entity.name.function.route.webx"
                },
                "3": {
                    "name": "meta.route.path.webx",
                    "patterns": [
                        {
                            "include": "#route-paths"
                        }
                    ]
                },
                "12": {
                    "name": "meta.route.body-handler.webx",
                    "patterns": [
                        {
                            "include": "#request-body-format"
                        }
                    ]
                },
                "27": {
                    "name": "keyword.operator.webx"
                },
                "28": {
                    "name": "meta.route.handler-list.webx",
                    "patterns": [
                        {
                            "include": "#handler-call"
                        },
                        {
                            "include": "#separators"
                        }
                    ]
                }
            }
        },
        "stmt-location": {
            "name": "keyword.control.webx",
            "begin": "\\b(location)\\b",
            "end": "(?=\\{)",
            "patterns": [
                {
                    "include": "#route-paths"
                }
            ]
        },
        "stmt-global": {
            "name": "meta.global.webx",
            "begin": "\\b(global)\\s*\\{",
            "end": "\\}",
            "beginCaptures": {
                "1": {
                    "name": "keyword.control.global.webx"
                }
            },
            "patterns": [
                {
                    "include": "source.ts"
                }
            ]
        },
        "stmt-model": {
            "name": "keyword.control.webx",
            "begin": "\\b(model)\\b",
            "end": "(?=\\})",
            "patterns": [
                {
                    "include": "#variables"
                },
                {
                    "include": "#separators"
                },
                {
                    "include": "#types"
                }
            ]
        },
        "stmt-handler-ts": {
            "name": "keyword.control.webx",
            "begin": "\\b(handler)\\s+(\\w+)(\\([^\\)]*\\))\\s*\\{",
            "end": "\\}",
            "beginCaptures": {
                "1": {
                    "name": "keyword.control.handler.webx"
                },
                "2": {
                    "name": "entity.name.function.webx"
                },
                "3": {
                    "name": "variable.parameter.webx",
                    "patterns": [
                        {
                            "include": "#route-path-params"
                        }
                    ]
                }
            },
            "patterns": [
                {
                    "include": "source.ts"
                }
            ]
        },
        "stmt-handler-tsx": {
            "name": "keyword.control.webx",
            "begin": "\\b(handler)\\s+(\\w+)(\\([^\\)]*\\))\\s*\\(",
            "end": "\\)",
            "beginCaptures": {
                "1": {
                    "name": "keyword.control.handler.webx"
                },
                "2": {
                    "name": "entity.name.function.webx"
                },
                "3": {
                    "name": "variable.parameter.webx",
                    "patterns": [
                        {
                            "include": "#route-path-params"
                        }
                    ]
                }
            },
            "patterns": [
                {
                    "include": "source.tsx"
                }
            ]
        },
        "keywords": {
            "name": "keyword.control.webx",
            "patterns": [
                {
                    "include": "#stmt-location"
                },
                {
                    "include": "#stmt-global"
                },
                {
                    "include": "#stmt-model"
                },
                {
                    "include": "#stmt-handler-ts"
                },
                {
                    "include": "#stmt-handler-tsx"
                }
            ]
        },
        "variables": {
            "name": "variable.webx",
            "match": "(\\b[\\w\\_]+\\b)"
        },
        "parameters": {
            "name": "variable.parameter.webx",
            "match": "(\\b[\\w\\_]+\\b)"
        },
        "types": {
            "name": "entity.name.type",
            "match": "(\\b[\\w\\_]+\\b)"
        },
        "operators": {
            "name": "keyword.operator.webx",
            "match": "(\\->|\\=\\>|\\+|\\-|\\*|\\/|\\%|\\=|\\!|\\<|\\>|\\&|\\|)"
        },
        "separators": {
            "name": "punctuation.webx",
            "match": "(\\.|\\,|\\;|\\:)"
        }
    },
    "scopeName": "source.webx"
}