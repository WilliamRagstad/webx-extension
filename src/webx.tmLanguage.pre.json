{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "WebX",
	"patterns": [
		{ "include": "#comments" },
		{ "include": "#routes-ts-body" },
		{ "include": "#routes-tsx-body" },
		{ "include": "#route-handler-only" },
		{ "include": "#keywords" },
		{ "include": "#types" },
		{ "include": "#variables" },
		{ "include": "#operators" },
		{ "include": "#separators" }
	],
	"macros": {
		"IDENT": "(\\b[\\w\\_]+\\b)",
		"HTTP_METHOD": "(\\b(get|post|put|delete|patch|options|head|GET|POST|PUT|DELETE|PATCH|OPTIONS|HEAD)\\b)",
		"SPACED_WORD": "(\\s*(\\w+)\\s*)",
		"IDENT_TYPE_PAIR": "({{SPACED_WORD}}(\\:){{SPACED_WORD}})",
		"FUNCTION_CALL_PARAMS": "(\\w+\\(({{SPACED_WORD}}(\\,{{SPACED_WORD}})*)?\\))",
		"FUNCTION_CALL_TYPED_PARAMS": "(\\w+\\(({{IDENT_TYPE_PAIR}}(\\s*\\,{{IDENT_TYPE_PAIR}})*)?\\))",
		"URL_PATH": "(([\\w+\\/]|(\\({{IDENT_TYPE_PAIR}}\\)))+)",
		"HANDLER_CALL": "({{FUNCTION_CALL_PARAMS}}(\\s*\\:\\s*(\\w+))?)",
		"HANDLER_CALL_LIST": "({{HANDLER_CALL}}(\\s*\\,\\s*{{HANDLER_CALL}})*)"
	},
	"repository": {
		"comments": {
			"patterns": [{
				"name": "comment.line.double-slash.webx",
				"match": "//.*$"
			}, {
				"name": "comment.block.webx",
				"begin": "/\\*",
				"end": "\\*/"
			}]
		},

		"handler-call": {
			"name": "meta.route.handler.webx",
			"match": "{{HANDLER_CALL}}",
			"captures": {
				"1": { "name": "entity.name.function.webx" },
				"3": {
					"name": "meta.route.handler-params.webx",
					"patterns": [
						{ "include": "#parameters" },
						{ "include": "#separators" }
					]
				},
				"9": {
					"name": "meta.route.handler-output.webx",
					"patterns": [
						{ "include": "#parameters" },
						{ "include": "#separators" }
					]
				}
			}
		},

		"param-type-pairs": {
			"name": "meta.route.handler-params.webx",
			"match": "{{IDENT_TYPE_PAIR}}",
			"captures": {
				"2": {
					"name": "variable.parameter.webx",
					"patterns": [
						{ "include": "#parameters" }
					]
				},
				"3":{
					"name": "keyword.operator.webx",
					"patterns": [
						{ "include": "#separators" }
					]
				},
				"5": {
					"name": "entity.name.type.webx",
					"patterns": [
						{ "include": "#types" }
					]
				}
			}
		},

		"request-body-format":{
			"name": "meta.route.body-format.webx",
			"match": "{{FUNCTION_CALL_TYPED_PARAMS}}",
			"captures": {
				"1": { "name": "support.class" },
				"2": {
					"name": "meta.route.handler-params.webx",
					"patterns": [{ "include": "#param-type-pairs" }]
				}
			}
		},
		"route-path-params":{
			"name": "keyword.other.webx",
			"match": "\\({{IDENT_TYPE_PAIR}}\\)",
			"captures": {
				"2": {
					"name": "variable.parameter.webx",
					"patterns": [
						{ "include": "#parameters" }
					]
				},
				"3":{
					"name": "keyword.operator.webx",
					"patterns": [
						{ "include": "#separators" }
					]
				},
				"5": {
					"name": "entity.name.type.webx",
					"patterns": [
						{ "include": "#types" }
					]
				}
			}
		},
		"route-path-url": {
			"name": "string.interpolated.webx",
			"match": "((\\w+)?\\/?(\\w+|\\/)(\\/\\w+)*\\/?)"
		},
		"route-paths":{
			"name": "string.interpolated.webx",
			"patterns": [
				{ "include": "#route-path-params" },
				{ "include": "#route-path-url" }
			]
		},
		"routes": {
			"name": "entity.name.function.webx",
			"begin": "{{HTTP_METHOD}}",
			"end": "(?=(\\-\\>|\\{|\\<))",
			"patterns": [
				{ "include": "#request-body-format" },
				{ "include": "#route-paths" }
			]
		},
		"route-handler-only": {
			"name": "meta.route.webx",
			"match": "{{HTTP_METHOD}}\\s+{{URL_PATH}}\\s+{{FUNCTION_CALL_TYPED_PARAMS}}?\\s*(\\-\\>)\\s*{{HANDLER_CALL_LIST}}",
			"captures": {
				"1": { "name": "entity.name.function.route.webx" },
				"3": {
					"name": "meta.route.path.webx",
					"patterns": [{ "include": "#route-paths" }]
				},
				"12": {
					"name": "meta.route.body-handler.webx",
					"patterns": [
						{ "include": "#request-body-format" }
					]
				},
				"27": { "name": "keyword.operator.webx" },
				"28": {
					"name": "meta.route.handler-list.webx",
					"patterns": [
						{ "include": "#handler-call" },
						{ "include": "#separators" }
					]
				}
			}
		},
		"routes-ts-body": {
			"name": "meta.route.webx",
			"begin": "{{HTTP_METHOD}}\\s+{{URL_PATH}}\\s+{{FUNCTION_CALL_TYPED_PARAMS}}?\\s*((\\-\\>)\\s*{{HANDLER_CALL_LIST}})?\\s*\\{",
			"end": "\\}\\s*((\\-\\>)\\s*{{HANDLER_CALL_LIST}})?",
			"beginCaptures": {
				"1": { "name": "entity.name.function.route.webx" },
				"3": {
					"name": "meta.route.path.webx",
					"patterns": [{ "include": "#route-paths" }]
				},
				"12": {
					"name": "meta.route.body-handler.webx",
					"patterns": [
						{ "include": "#request-body-format" }
					]
				},
				"28": { "name": "keyword.operator.webx" },
				"29": {
					"name": "meta.route.handler-list.webx",
					"patterns": [
						{ "include": "#handler-call" },
						{ "include": "#separators" }
					]
				}
			},
			"endCaptures": {
				"2": { "name": "keyword.operator.webx" },
				"3": {
					"name": "meta.route.handler-list.webx",
					"patterns": [
						{ "include": "#handler-call" },
						{ "include": "#separators" }
					]
				}
			},
			"patterns": [
				{ "include": "source.ts" }
			]
		},
		"routes-tsx-body": {
			"name": "meta.route.webx",
			"begin": "{{HTTP_METHOD}}\\s+{{URL_PATH}}\\s+{{FUNCTION_CALL_TYPED_PARAMS}}?\\s*((\\-\\>)\\s*{{HANDLER_CALL_LIST}})?\\s*\\(",
			"end": "\\)",
			"beginCaptures": {
				"1": { "name": "entity.name.function.route.webx" },
				"3": {
					"name": "meta.route.path.webx",
					"patterns": [{ "include": "#route-paths" }]
				},
				"12": {
					"name": "meta.route.body-handler.webx",
					"patterns": [
						{ "include": "#request-body-format" }
					]
				},
				"28": { "name": "keyword.operator.webx" },
				"29": {
					"name": "meta.route.handler-list.webx",
					"patterns": [
						{ "include": "#handler-call" },
						{ "include": "#separators" }
					]
				}
			},
			"patterns": [
				{ "include": "source.tsx" }
			]
		},

		"stmt-location": {
			"name": "keyword.control.webx",
			"begin": "\\b(location)\\b",
			"end": "(?=\\{)",
			"patterns": [
				{ "include": "#route-paths" }
			]
		},
		"stmt-global":{
			"name": "meta.global.webx",
			"begin": "\\b(global)\\s*\\{",
			"end": "\\}",
			"beginCaptures": {
				"1": { "name": "keyword.control.global.webx" }
			},
			"patterns": [{ "include": "source.ts" }]
		},
		"stmt-model":{
			"name": "meta.model.webx",
			"begin": "\\b(model)\\b\\s+{{IDENT}}\\s*\\{",
			"end": "(?=\\})",
			"beginCaptures": {
				"1": { "name": "keyword.control.model.webx" },
				"2": {
					"name": "meta.model.name.webx",
					"patterns": [
						{ "include": "#types" }
					]
				}
			},
			"patterns": [{
				"name": "meta.model.body.webx",
				"match": "{{IDENT_TYPE_PAIR}}",
				"captures": {
					"2": {
						"name": "meta.model.property.webx",
						"patterns": [{ "include": "#variables" }]
					},
					"4":{
						"name": "keyword.operator.webx"
					},
					"5": {
						"name": "meta.model.type.webx",
						"patterns": [{ "include": "#types" }]
					}
				}
			}]
		},
		"stmt-handler-ts":{
			"name": "keyword.control.webx",
			"begin": "\\b(handler)\\s+(\\w+)(\\([^\\)]*\\))\\s*\\{",
			"end": "\\}",
			"beginCaptures": {
				"1": { "name": "keyword.control.handler.webx" },
				"2": { "name": "entity.name.function.webx" },
				"3": {
					"name": "variable.parameter.webx",
					"patterns": [
						{ "include": "#route-path-params" }
					]
				}
			},
			"patterns": [{ "include": "source.ts" }]
		},
		"stmt-handler-tsx":{
			"name": "keyword.control.webx",
			"begin": "\\b(handler)\\s+(\\w+)(\\([^\\)]*\\))\\s*\\(",
			"end": "\\)",
			"beginCaptures": {
				"1": { "name": "keyword.control.handler.webx" },
				"2": { "name": "entity.name.function.webx" },
				"3": {
					"name": "variable.parameter.webx",
					"patterns": [
						{ "include": "#route-path-params" }
					]
				}
			},
			"patterns": [{ "include": "source.tsx" }]
		},
		"keywords": {
			"name": "keyword.control.webx",
			"patterns": [
				{ "include": "#stmt-location" },
				{ "include": "#stmt-global" },
				{ "include": "#stmt-model" },
				{ "include": "#stmt-handler-ts" },
				{ "include": "#stmt-handler-tsx" }
			]
		},
		"variables": {
			"name": "variable.webx",
			"match": "{{IDENT}}"
		},
		"parameters": {
			"name": "variable.parameter.webx",
			"match": "{{IDENT}}"
		},
		"types":{
            "name": "entity.name.type",
			"match": "{{IDENT}}"
		},
		"operators": {
			"name": "keyword.operator.webx",
			"match": "(\\->|\\=\\>|\\+|\\-|\\*|\\/|\\%|\\=|\\!|\\<|\\>|\\&|\\|)"
		},
		"separators":{
			"name": "punctuation.webx",
			"match": "(\\.|\\,|\\;|\\:)"
		}
	},
	"scopeName": "source.webx"
}